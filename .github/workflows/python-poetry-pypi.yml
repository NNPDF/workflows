name: deploy

on:
  workflow_call:
    inputs:
      python-version:
        type: string
        default: "3.10"
        required: false
        description: >
          Python version used to test and build the package
      poetry-extras:
        type: string
        required: false
        description: >
          Extras to be installed, in poetry format (e.g. "-E extra1 extra2")
    secrets:
      PYPI_TOKEN:
        required: true
        description: "Token used to deploy package on PyPI"

jobs:
  publish:
    name: üì¶ PyPI (üêç ${{ inputs.python-version }})
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          # tags needed for dynamic versioning
          fetch-depth: 0
      - name: Set up Python ${{ inputs.python-version }} üêç
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ inputs.python-version }}
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-path: ~/.virtualenvs
          installer-parallel: true
      - name: Cache Poetry virtualenv
        uses: actions/cache@v2
        id: cache
        with:
          path: ~/.virtualenvs
          key: ${{ runner.os }}-py-${{ steps.setup-python.outputs.python-version }}-poetry-${{ hashFiles('poetry.lock') }}
      - name: Install version management tool
        run: |
          # same poetry env
          PIP="$(head -n1 $(which poetry) | cut -c 3-) -m pip"
          ${PIP} install poetry-dynamic-versioning
      - name: Install dependencies
        run: poetry install --no-interaction --no-root --with test ${{ inputs.poetry-extras }}
        if: steps.cache.outputs.cache-hit != 'true'
      - name: Install project
        # it is required to repeat extras, otherwise they will be removed from
        # the environment
        run: poetry install --no-interaction ${{ inputs.poetry-extras }}
      - name: Install task runner
        run: pip install poethepoet
      - name: Test
        run: |
          # run tests just before deployment
          poe test
      - name: Package the distribution
        run: |
          # package the pure python wheel
          poetry build
      - name: Publish distribution üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_TOKEN }}
